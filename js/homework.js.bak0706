//页面配置
var config = {
    //年级id
    gradeId: 2014,
    //班级id
    classId: 1,
    // 分组id
    groupId: 1,
    //知识点
    knowledgeId: 1,
    // 题目类型
    exType: 1,
    // 题目难度级别
    exLevel: 1,
    // 页码
    pagenum: 0,
    // 单页返回结果数
    listnum: 3
};
//设置左分隔符为 <!
baidu.template.LEFT_DELIMITER = '<#';

//设置右分隔符为 <!  
baidu.template.RIGHT_DELIMITER = '#>';

//初始化
function init() {
    bindEvents();
    getGroups(config.gradeId, config.classId);
}

//绑定事件
function bindEvents() {
    $('#grade_select').on('change', function(e) {
        var gradeId = $(this).val();
        config.gradeId = gradeId;
        getGroups(config.gradeId, config.classId);
        console.log('gradeId:', gradeId);
    });
    $('#class_select').on('change', function(e) {
        var classId = $(this).val();
        config.classId = classId;
        getGroups(config.gradeId, config.classId);
        console.log('classId:', classId);
    });
    $('#group_select').on('change', function(e) {
        var gid = $(this).val();
        config.groupId = gid;
        getStudents(gid);
        console.log('groupId:', gid);
    });
    $('#form1 .next').on('click', function(e) {
        getExamList();
    });
}


/**
 * 根据年级和班级获取分组数据
 * @param  {[type]} gradeId [description]
 * @param  {[type]} classId [description]
 * @return {[type]}         [description]
 */
function getGroups(gradeId, classId) {
    console.log('getGroups');
    $.ajax({
        url: '/exercise_assign/getGroups/' + gradeId + '/' + classId,
        async: true,
        dataType: 'json',
        context: this,
        success: function(json) {
            console.log('获取分组数据成功：', json);
            if (json && json.length > 0) {
                var htmls = [];
                for (var i = 0; i < json.length; i++) {
                    htmls.push('<option value="' + json[i].GID + '">' + json[i].GroupName + '</option>');
                }
                $('#group_select').html(htmls.join(''));
                //创建分组的学生名单表格
                $('#group_select').trigger('change');
            }
        },
        error: function(err) {
            console.log('获取分组数据失败：', err);
        }
    });
}

/**
 * 根据分组数据获取学生名单
 * @param  {[type]} gid 分组id
 * @return {[type]}     [description]
 */
function getStudents(gid) {
    console.log('getStudents');
    $.ajax({
        url: '/exercise_assign/getStudents/' + gid,
        async: true,
        dataType: 'json',
        context: this,
        success: function(json) {
            console.log('获取学生名单数据成功：', json);
            if (json && json.length > 1) {
                createStuList(json);
            }
        },
        error: function(err) {
            console.log('获取学生名单数据失败：', err);
        }
    });
}

/**
 * 创建学生名单表格
 */
function createStuList(data) {
    var html = baidu.template('students_list', {
        list: data
    });
    $('#stu_wrapper').html(html);
}


/**
 * 根据题目类型和题目难度请求题目列表
 * @param  {[type]} exType  [description]
 * @param  {[type]} exLevel [description]
 * @return {[type]}         [description]
 */
function getExamList(exType, exLevel) {
    console.log('getExamList');
    var kid = config.knowledgeId,
        exType = exType || config.exType,
        exLevel = exLevel || config.exLevel,
        pagenum = config.pagenum,
        listnum = config.listnum;
    $.ajax({
        url: '/exercise_assign/getProblems/' + kid + '/' + exType + '/' + exLevel + '/' + pagenum + '/' + listnum,
        async: true,
        dataType: 'json',
        context: this,
        success: function(json) {
            console.log('请求题目列表数据成功：', json);
            if (json && json.length > 0) {
                switchHomework(json);
            }
        },
        error: function(err) {
            console.log('请求题目列表数据失败：', err);
            switchHomework();
        }
    });

}

// 跳转到选择题目
function switchHomework(data) {
    data = data || [];
    var html = baidu.template('homework_list', {
        worklist: data
    });
    $('#main_wrapper').html(html);
    //初始化状态
    initStatus();
    //绑定页面事件
    bindSelectWork();
}

//初始化单选框的选择状态
function initStatus() {
    $('#exercise_form input').each(function(index) {
        var input = $(this);
        if (input.val() == config.exType) {
            input.attr('checked', true);
        } else {
            input.attr('checked', false);
        }
    });
    $('#level_form input').each(function(index) {
        var input = $(this);
        if (input.val() == config.exLevel) {
            input.attr('checked', true);
        } else {
            input.attr('checked', false);
        }
    });
}

//选择题目页面事件绑定
function bindSelectWork() {
    $('#exercise_form input').on('click', function(e) {
        $(this).attr('checked', true);
        var type = $(this).val();
        config.exType = type;
        getExamList(config.exType, config.exLevel);
        console.log('exercise_form:', type);
    });
    $('#level_form input').on('click', function(e) {
        $(this).attr('checked', true);
        var level = $(this).val();
        config.exLevel = level;
        getExamList(config.exType, config.exLevel);
        console.log('level_form:', level);
    });
    $('#form2 input.next').on('click', function(e) {
        console.log('#form2 input.next');
    });
    $('#form2 input.back').on('click', function(e) {
        console.log('#form2 input.back');
    });
    // 添加作业
    $('.hmwork-table .add-work em').on('click', function(e) {
        //添加作业到队列中
        addWork($(this));

        console.log('添加作业', $(this));
    });
    //查看答案
    $('.hmwork-table .ans').on('click', function(e) {
        var id = $(this).attr('id');
        $(this).parents('td').find('.ans-cont').toggle();
        $(this).text('收起答案');
        console.log('查看答案', $(this));
    });
}


//添加作业到队列中
function addWork(obj) {
    var type = obj.data('type');
    var text = type == 'add' ? '取消作业' : '添加作业';
    var ntype = type == 'add' ? 'remove' : 'add';
    obj.data('type', ntype);
    obj.parent().find('i').text(text);
}

$(document).ready(init);